<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 800">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; text-anchor: middle; }
      .subtitle { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; text-anchor: middle; }
      .label { font-family: Arial, sans-serif; font-size: 12px; text-anchor: middle; }
      .small-label { font-family: Arial, sans-serif; font-size: 10px; text-anchor: middle; }
      .layer-box { fill: #f0f8ff; stroke: #4682b4; stroke-width: 2; }
      .component-box { fill: #fff; stroke: #666; stroke-width: 1; }
      .data-flow { stroke: #ff6b35; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .sync-flow { stroke: #4169e1; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .error-flow { stroke: #dc143c; stroke-width: 2; fill: none; marker-end: url(#arrowhead); stroke-dasharray: 5,5; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#333" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="600" y="30" class="title">BPMN Collaborative Editor - Real-Time Synchronization Architecture</text>
  
  <!-- Layer 1: Presentation Layer -->
  <rect x="50" y="60" width="1100" height="120" class="layer-box"/>
  <text x="600" y="80" class="subtitle">1. Presentation Layer (BPMN.js)</text>
  
  <!-- BPMN.js Components -->
  <rect x="80" y="100" width="150" height="60" class="component-box"/>
  <text x="155" y="125" class="label">User Interactions</text>
  <text x="155" y="140" class="small-label">create, move, delete</text>
  
  <rect x="260" y="100" width="150" height="60" class="component-box"/>
  <text x="335" y="125" class="label">Event Bus</text>
  <text x="335" y="140" class="small-label">commandStack, elements</text>
  
  <rect x="440" y="100" width="150" height="60" class="component-box"/>
  <text x="515" y="125" class="label">Modeler Services</text>
  <text x="515" y="140" class="small-label">modeling, registry</text>
  
  <rect x="620" y="100" width="150" height="60" class="component-box"/>
  <text x="695" y="125" class="label">Canvas Rendering</text>
  <text x="695" y="140" class="small-label">SVG updates</text>
  
  <rect x="800" y="100" width="150" height="60" class="component-box"/>
  <text x="875" y="125" class="label">Selection</text>
  <text x="875" y="140" class="small-label">awareness updates</text>
  
  <rect x="980" y="100" width="150" height="60" class="component-box"/>
  <text x="1055" y="125" class="label">Undo/Redo</text>
  <text x="1055" y="140" class="small-label">command stack</text>
  
  <!-- Layer 2: Synchronization Layer -->
  <rect x="50" y="200" width="1100" height="120" class="layer-box"/>
  <text x="600" y="220" class="subtitle">2. Synchronization Layer (BpmnSyncManager)</text>
  
  <rect x="80" y="240" width="180" height="60" class="component-box"/>
  <text x="170" y="265" class="label">Event Listener</text>
  <text x="170" y="280" class="small-label">handleElementsChanged</text>
  
  <rect x="290" y="240" width="180" height="60" class="component-box"/>
  <text x="380" y="265" class="label">Debounce Logic</text>
  <text x="380" y="280" class="small-label">300ms batching</text>
  
  <rect x="500" y="240" width="180" height="60" class="component-box"/>
  <text x="590" y="265" class="label">BPMN↔Y.js Transform</text>
  <text x="590" y="280" class="small-label">data mapping</text>
  
  <rect x="710" y="240" width="180" height="60" class="component-box"/>
  <text x="800" y="265" class="label">Loop Prevention</text>
  <text x="800" y="280" class="small-label">origin tracking</text>
  
  <rect x="920" y="240" width="180" height="60" class="component-box"/>
  <text x="1010" y="265" class="label">Conflict Detection</text>
  <text x="1010" y="280" class="small-label">version tracking</text>
  
  <!-- Layer 3: CRDT Layer -->
  <rect x="50" y="340" width="1100" height="120" class="layer-box"/>
  <text x="600" y="360" class="subtitle">3. CRDT Layer (Y.js Document)</text>
  
  <rect x="80" y="380" width="160" height="60" class="component-box"/>
  <text x="160" y="405" class="label">Y.Map</text>
  <text x="160" y="420" class="small-label">bpmn-elements</text>
  
  <rect x="270" y="380" width="160" height="60" class="component-box"/>
  <text x="350" y="405" class="label">State Vector</text>
  <text x="350" y="420" class="small-label">version tracking</text>
  
  <rect x="460" y="380" width="160" height="60" class="component-box"/>
  <text x="540" y="405" class="label">Transaction</text>
  <text x="540" y="420" class="small-label">origin metadata</text>
  
  <rect x="650" y="380" width="160" height="60" class="component-box"/>
  <text x="730" y="405" class="label">CRDT Merge</text>
  <text x="730" y="420" class="small-label">conflict-free</text>
  
  <rect x="840" y="380" width="160" height="60" class="component-box"/>
  <text x="920" y="405" class="label">Update Events</text>
  <text x="920" y="420" class="small-label">observe/emit</text>
  
  <rect x="1030" y="380" width="120" height="60" class="component-box"/>
  <text x="1090" y="405" class="label">Persistence</text>
  <text x="1090" y="420" class="small-label">checkpoint</text>
  
  <!-- Layer 4: Network Layer -->
  <rect x="50" y="480" width="1100" height="120" class="layer-box"/>
  <text x="600" y="500" class="subtitle">4. Network Layer (ConnectionManager)</text>
  
  <rect x="80" y="520" width="150" height="60" class="component-box"/>
  <text x="155" y="545" class="label">WebSocket</text>
  <text x="155" y="560" class="small-label">real-time channel</text>
  
  <rect x="260" y="520" width="150" height="60" class="component-box"/>
  <text x="335" y="545" class="label">Serialization</text>
  <text x="335" y="560" class="small-label">binary/JSON</text>
  
  <rect x="440" y="520" width="150" height="60" class="component-box"/>
  <text x="515" y="545" class="label">Compression</text>
  <text x="515" y="560" class="small-label">update merging</text>
  
  <rect x="620" y="520" width="150" height="60" class="component-box"/>
  <text x="695" y="545" class="label">Quality Monitor</text>
  <text x="695" y="560" class="small-label">latency tracking</text>
  
  <rect x="800" y="520" width="150" height="60" class="component-box"/>
  <text x="875" y="545" class="label">Reconnection</text>
  <text x="875" y="560" class="small-label">exponential backoff</text>
  
  <rect x="980" y="520" width="150" height="60" class="component-box"/>
  <text x="1055" y="545" class="label">Error Recovery</text>
  <text x="1055" y="560" class="small-label">circuit breaker</text>
  
  <!-- Layer 5: Server Layer -->
  <rect x="50" y="620" width="1100" height="120" class="layer-box"/>
  <text x="600" y="640" class="subtitle">5. Server Layer (Collaboration Backend)</text>
  
  <rect x="80" y="660" width="150" height="60" class="component-box"/>
  <text x="155" y="685" class="label">WebSocket Gateway</text>
  <text x="155" y="700" class="small-label">NestJS</text>
  
  <rect x="260" y="660" width="150" height="60" class="component-box"/>
  <text x="335" y="685" class="label">Update Validation</text>
  <text x="335" y="700" class="small-label">auth &amp; schema</text>
  
  <rect x="440" y="660" width="150" height="60" class="component-box"/>
  <text x="515" y="685" class="label">Broadcast</text>
  <text x="515" y="700" class="small-label">room management</text>
  
  <rect x="620" y="660" width="150" height="60" class="component-box"/>
  <text x="695" y="685" class="label">Persistence</text>
  <text x="695" y="700" class="small-label">MongoDB</text>
  
  <rect x="800" y="660" width="150" height="60" class="component-box"/>
  <text x="875" y="685" class="label">Conflict Resolution</text>
  <text x="875" y="700" class="small-label">authoritative</text>
  
  <rect x="980" y="660" width="150" height="60" class="component-box"/>
  <text x="1055" y="685" class="label">Session Management</text>
  <text x="1055" y="700" class="small-label">user tracking</text>
  
  <!-- Data Flow Arrows -->
  <!-- Outbound Flow (User → Server) -->
  <path d="M 155 160 L 170 200" class="data-flow"/>
  <path d="M 170 300 L 160 340" class="data-flow"/>
  <path d="M 350 440 L 335 480" class="data-flow"/>
  <path d="M 335 580 L 155 620" class="data-flow"/>
  
  <!-- Inbound Flow (Server → User) -->
  <path d="M 515 620 L 695 580" class="sync-flow"/>
  <path d="M 730 520 L 920 480" class="sync-flow"/>
  <path d="M 920 440 L 800 380" class="sync-flow"/>
  <path d="M 800 340 L 590 300" class="sync-flow"/>
  <path d="M 590 240 L 515 200" class="sync-flow"/>
  <path d="M 515 160 L 695 160" class="sync-flow"/>
  
  <!-- Error Recovery Flows -->
  <path d="M 1055 520 L 1010 480" class="error-flow"/>
  <path d="M 1010 300 L 1090 340" class="error-flow"/>
  
  <!-- Legend -->
  <rect x="50" y="760" width="300" height="30" fill="#f9f9f9" stroke="#ccc"/>
  <text x="60" y="778" class="small-label" text-anchor="start">Legend:</text>
  <line x1="120" y1="775" x2="140" y2="775" class="data-flow"/>
  <text x="145" y="778" class="small-label" text-anchor="start">Outbound Flow</text>
  <line x1="220" y1="775" x2="240" y2="775" class="sync-flow"/>
  <text x="245" y="778" class="small-label" text-anchor="start">Inbound Flow</text>
  <line x1="310" y1="775" x2="330" y2="775" class="error-flow"/>
  <text x="335" y="778" class="small-label" text-anchor="start">Error Recovery</text>
</svg>