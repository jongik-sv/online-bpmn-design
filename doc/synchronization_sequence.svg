<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1400 900">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; text-anchor: middle; }
      .subtitle { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; text-anchor: middle; }
      .actor { font-family: Arial, sans-serif; font-size: 12px; font-weight: bold; text-anchor: middle; }
      .message { font-family: Arial, sans-serif; font-size: 10px; }
      .step-num { font-family: Arial, sans-serif; font-size: 10px; font-weight: bold; fill: #fff; text-anchor: middle; }
      .actor-box { fill: #4682b4; stroke: #2c5282; stroke-width: 2; }
      .lifeline { stroke: #666; stroke-width: 2; stroke-dasharray: 5,5; }
      .outbound-msg { stroke: #ff6b35; stroke-width: 2; fill: none; marker-end: url(#arrow-out); }
      .inbound-msg { stroke: #4169e1; stroke-width: 2; fill: none; marker-end: url(#arrow-in); }
      .internal-msg { stroke: #32cd32; stroke-width: 2; fill: none; marker-end: url(#arrow-int); }
      .step-circle { fill: #ff6b35; stroke: #fff; stroke-width: 2; }
      .activation { fill: #f0f8ff; stroke: #4682b4; stroke-width: 1; opacity: 0.7; }
    </style>
    <marker id="arrow-out" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#ff6b35" />
    </marker>
    <marker id="arrow-in" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#4169e1" />
    </marker>
    <marker id="arrow-int" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#32cd32" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="700" y="30" class="title">BPMN Collaborative Synchronization - Sequence Diagram</text>
  
  <!-- Actors -->
  <rect x="50" y="60" width="120" height="40" class="actor-box" rx="5"/>
  <text x="110" y="85" class="actor" fill="white">User A (Client)</text>
  
  <rect x="220" y="60" width="120" height="40" class="actor-box" rx="5"/>
  <text x="280" y="85" class="actor" fill="white">BPMN.js</text>
  
  <rect x="390" y="60" width="120" height="40" class="actor-box" rx="5"/>
  <text x="450" y="85" class="actor" fill="white">BpmnSyncManager</text>
  
  <rect x="560" y="60" width="120" height="40" class="actor-box" rx="5"/>
  <text x="620" y="85" class="actor" fill="white">Y.js Document</text>
  
  <rect x="730" y="60" width="120" height="40" class="actor-box" rx="5"/>
  <text x="790" y="85" class="actor" fill="white">ConnectionManager</text>
  
  <rect x="900" y="60" width="120" height="40" class="actor-box" rx="5"/>
  <text x="960" y="85" class="actor" fill="white">Server</text>
  
  <rect x="1070" y="60" width="120" height="40" class="actor-box" rx="5"/>
  <text x="1130" y="85" class="actor" fill="white">User B (Client)</text>
  
  <rect x="1240" y="60" width="120" height="40" class="actor-box" rx="5"/>
  <text x="1300" y="85" class="actor" fill="white">BPMN.js B</text>
  
  <!-- Lifelines -->
  <line x1="110" y1="100" x2="110" y2="860" class="lifeline"/>
  <line x1="280" y1="100" x2="280" y2="860" class="lifeline"/>
  <line x1="450" y1="100" x2="450" y2="860" class="lifeline"/>
  <line x1="620" y1="100" x2="620" y2="860" class="lifeline"/>
  <line x1="790" y1="100" x2="790" y2="860" class="lifeline"/>
  <line x1="960" y1="100" x2="960" y2="860" class="lifeline"/>
  <line x1="1130" y1="100" x2="1130" y2="860" class="lifeline"/>
  <line x1="1300" y1="100" x2="1300" y2="860" class="lifeline"/>
  
  <!-- Outbound Flow Messages -->
  
  <!-- Step 1 -->
  <circle cx="30" cy="130" r="12" class="step-circle"/>
  <text x="30" y="135" class="step-num">1</text>
  <line x1="110" y1="130" x2="280" y2="130" class="outbound-msg"/>
  <text x="195" y="125" class="message">User moves element</text>
  
  <!-- Step 2 -->
  <circle cx="30" cy="160" r="12" class="step-circle"/>
  <text x="30" y="165" class="step-num">2</text>
  <line x1="280" y1="160" x2="450" y2="160" class="internal-msg"/>
  <text x="365" y="155" class="message">elements.changed event</text>
  
  <!-- Step 3 -->
  <circle cx="30" cy="190" r="12" class="step-circle"/>
  <text x="30" y="195" class="step-num">3</text>
  <rect x="440" y="180" width="20" height="40" class="activation"/>
  <text x="470" y="185" class="message">Debounce (300ms)</text>
  <text x="470" y="200" class="message">+ Batch changes</text>
  
  <!-- Step 4 -->
  <circle cx="30" cy="240" r="12" class="step-circle"/>
  <text x="30" y="245" class="step-num">4</text>
  <line x1="450" y1="240" x2="620" y2="240" class="outbound-msg"/>
  <text x="535" y="235" class="message">Y.Map.set(elementId, data)</text>
  <text x="535" y="250" class="message">origin='local'</text>
  
  <!-- Step 5 -->
  <circle cx="30" cy="280" r="12" class="step-circle"/>
  <text x="30" y="285" class="step-num">5</text>
  <line x1="620" y1="280" x2="790" y2="280" class="outbound-msg"/>
  <text x="705" y="275" class="message">'update' event</text>
  <text x="705" y="290" class="message">Uint8Array update</text>
  
  <!-- Step 6 -->
  <circle cx="30" cy="320" r="12" class="step-circle"/>
  <text x="30" y="325" class="step-num">6</text>
  <rect x="780" y="310" width="20" height="40" class="activation"/>
  <text x="810" y="315" class="message">Compress &amp; Serialize</text>
  <text x="810" y="330" class="message">+ Quality check</text>
  
  <!-- Step 7 -->
  <circle cx="30" cy="370" r="12" class="step-circle"/>
  <text x="30" y="375" class="step-num">7</text>
  <line x1="790" y1="370" x2="960" y2="370" class="outbound-msg"/>
  <text x="875" y="365" class="message">WebSocket: sync-update</text>
  <text x="875" y="380" class="message">{docId, update, origin}</text>
  
  <!-- Step 8 -->
  <circle cx="30" cy="410" r="12" class="step-circle"/>
  <text x="30" y="415" class="step-num">8</text>
  <rect x="950" y="400" width="20" height="50" class="activation"/>
  <text x="980" y="405" class="message">Validate update</text>
  <text x="980" y="420" class="message">Persist to MongoDB</text>
  <text x="980" y="435" class="message">Broadcast to others</text>
  
  <!-- Separator Line -->
  <line x1="50" y1="480" x2="1350" y2="480" stroke="#ccc" stroke-width="2"/>
  <text x="700" y="470" class="subtitle">Inbound Flow (Remote Changes)</text>
  
  <!-- Inbound Flow Messages -->
  
  <!-- Step 9 -->
  <circle cx="30" cy="520" r="12" class="step-circle"/>
  <text x="30" y="525" class="step-num">9</text>
  <line x1="960" y1="520" x2="1130" y2="520" class="inbound-msg"/>
  <text x="1045" y="515" class="message">WebSocket: yjs-update</text>
  <text x="1045" y="530" class="message">to User B</text>
  
  <!-- Step 10 -->
  <circle cx="30" cy="560" r="12" class="step-circle"/>
  <text x="30" y="565" class="step-num">10</text>
  <line x1="1130" y1="560" x2="620" y2="560" class="inbound-msg"/>
  <text x="875" y="555" class="message">Apply Y.js update</text>
  <text x="875" y="570" class="message">origin='remote'</text>
  
  <!-- Step 11 -->
  <circle cx="30" cy="600" r="12" class="step-circle"/>
  <text x="30" y="605" class="step-num">11</text>
  <line x1="620" y1="600" x2="450" y2="600" class="inbound-msg"/>
  <text x="535" y="595" class="message">Y.Map observe()</text>
  <text x="535" y="610" class="message">handleYjsChange()</text>
  
  <!-- Step 12 -->
  <circle cx="30" cy="640" r="12" class="step-circle"/>
  <text x="30" y="645" class="step-num">12</text>
  <rect x="440" y="630" width="20" height="60" class="activation"/>
  <text x="470" y="635" class="message">isSyncing = true</text>
  <text x="470" y="650" class="message">Disable BPMN listeners</text>
  <text x="470" y="665" class="message">Transform Y.js → BPMN</text>
  <text x="470" y="680" class="message">Apply to modeler</text>
  
  <!-- Step 13 -->
  <circle cx="30" cy="720" r="12" class="step-circle"/>
  <text x="30" y="725" class="step-num">13</text>
  <line x1="450" y1="720" x2="1300" y2="720" class="inbound-msg"/>
  <text x="875" y="715" class="message">modeling.updateElement()</text>
  <text x="875" y="730" class="message">isRemoteChange=true</text>
  
  <!-- Step 14 -->
  <circle cx="30" cy="760" r="12" class="step-circle"/>
  <text x="30" y="765" class="step-num">14</text>
  <rect x="1290" y="750" width="20" height="40" class="activation"/>
  <text x="1320" y="755" class="message">UI Update</text>
  <text x="1320" y="770" class="message">Visual sync</text>
  
  <!-- Step 15 -->
  <circle cx="30" cy="800" r="12" class="step-circle"/>
  <text x="30" y="805" class="step-num">15</text>
  <line x1="450" y1="800" x2="450" y2="820" class="internal-msg"/>
  <text x="470" y="795" class="message">Re-enable listeners</text>
  <text x="470" y="810" class="message">isSyncing = false</text>
  
  <!-- Performance Optimization Notes -->
  <rect x="50" y="850" width="1300" height="40" fill="#fffacd" stroke="#ddd" stroke-width="1"/>
  <text x="60" y="865" class="message" font-weight="bold">Key Optimizations:</text>
  <text x="60" y="880" class="message">• Debouncing (300ms) • Update compression • Origin tracking • Loop prevention • Error recovery</text>
  
</svg>